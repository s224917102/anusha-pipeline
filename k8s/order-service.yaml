apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-service
  labels:
    app: order-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: order-service
  template:
    metadata:
      labels:
        app: order-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "8080"        # container listens on 8080
    spec:
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: order-service-container
          image: docker.io/s224917102/order_service:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
          env:
            - name: POSTGRES_HOST
              value: order-db-service-w09-aks
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: ecomm-config-w09-aks
                  key: ORDERS_DB_NAME
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: ecomm-secrets-w09-aks
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ecomm-secrets-w09-aks
                  key: POSTGRES_PASSWORD
            - name: PRODUCT_SERVICE_URL
              valueFrom:
                configMapKeyRef:
                  name: ecomm-config-w09-aks
                  key: PRODUCT_SERVICE_URL
          securityContext:
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop: ["ALL"]
          volumeMounts:
            - name: tmp
              mountPath: /tmp
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 25
            periodSeconds: 5
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 50
            periodSeconds: 10
            failureThreshold: 5
      volumes:
        - name: tmp
          emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: order-service
  labels:
    app: order-service
spec:
  selector:
    app: order-service
  ports:
    - protocol: TCP
      port: 8001       # external LB/ClusterIP port
      targetPort: 8080 # container port
  type: LoadBalancer
